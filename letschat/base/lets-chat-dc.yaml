apiVersion: v1
items:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      argocd.argoproj.io/compare-options: IgnoreExtraneous,IgnoreDifference=/spec/template/spec/containers/0/image
    labels:
      app.kubernetes.io/component: frontend
      app.kubernetes.io/name: letschat-front
      app.kubernetes.io/part-of: lets-chat
      app: lets-chat
    name: lets-chat
  spec:
    replicas: 1
    revisionHistoryLimit: 1
    selector:
      app: lets-chat
      deploymentconfig: lets-chat
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
          argocd.argoproj.io/sync-options: Validate=false
          argocd.argoproj.io/compare-options: IgnoreExtraneous,IgnoreDifference=/spec/containers/0/image
        creationTimestamp: null
        labels:
          app: lets-chat
          deploymentconfig: lets-chat
      spec:
        containers:
        - image: lets-chat:latest
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: lets-chat
          envFrom:
            - secretRef:
                name: mongodb
          ports:
          - containerPort: 8080
            protocol: TCP
            name: http
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - lets-chat
        from:
          kind: ImageStreamTag
          name: lets-chat:latest
      type: ImageChange
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
